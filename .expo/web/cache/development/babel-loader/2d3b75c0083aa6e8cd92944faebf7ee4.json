{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/hyomithetech/Desktop/crypto_alarm/component/ExistingAlarm.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Alarm from \"./Alarm\";\n\nvar ExistingAlarm = function ExistingAlarm() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  useEffect(function () {\n    var getData = function getData() {\n      var keys;\n      return _regeneratorRuntime.async(function getData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              keys = [];\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getAllKeys());\n\n            case 4:\n              keys = _context.sent;\n              setData(keys);\n              _context.next = 10;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 8]], Promise);\n    };\n\n    getData();\n  }, []);\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"Existing Alarm\"), data && React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, data.map(function (alarm, index) {\n    return React.createElement(Alarm, {\n      key: index,\n      alarm: alarm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    });\n  })));\n};\n\nexport default ExistingAlarm;","map":{"version":3,"sources":["/Users/hyomithetech/Desktop/crypto_alarm/component/ExistingAlarm.js"],"names":["React","useState","useEffect","AsyncStorage","Alarm","ExistingAlarm","data","setData","getData","keys","getAllKeys","map","alarm","index"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,OAAOC,KAAP;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,kBAAwBJ,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOK,IAAP;AAAA,MAAaC,OAAb;;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMM,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,cAAAA,IADU,GACH,EADG;AAAA;AAAA;AAAA,+CAGCN,YAAY,CAACO,UAAb,EAHD;;AAAA;AAGZD,cAAAA,IAHY;AAIZF,cAAAA,OAAO,CAACE,IAAD,CAAP;AAJY;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AAOAD,IAAAA,OAAO;AACR,GATQ,EASN,EATM,CAAT;AAWA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEGF,IAAI,IACH,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACK,GAAL,CAAS,UAACC,KAAD,EAAQC,KAAR;AAAA,WACR,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,KAAZ;AAAmB,MAAA,KAAK,EAAED,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADQ;AAAA,GAAT,CADH,CAHJ,CADF;AAYD,CA1BD;;AA4BA,eAAeP,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, StyleSheet, Text, View } from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nimport Alarm from \"./Alarm\";\n\nconst ExistingAlarm = () => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    const getData = async () => {\n      let keys = [];\n      try {\n        keys = await AsyncStorage.getAllKeys();\n        setData(keys);\n      } catch (e) {}\n    };\n    getData();\n  }, []);\n\n  return (\n    <View>\n      <Text>Existing Alarm</Text>\n      {data && (\n        <View>\n          {data.map((alarm, index) => (\n            <Alarm key={index} alarm={alarm} />\n          ))}\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default ExistingAlarm;\n"]},"metadata":{},"sourceType":"module"}