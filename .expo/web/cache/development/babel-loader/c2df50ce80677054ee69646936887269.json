{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/hyomithetech/Desktop/crypto_alarm/component/pages/Alarm.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { NavigationContainer, withNavigation } from \"@react-navigation/native\";\nimport { EditAlarmContext } from \"../context/EditAlarmContextProvider\";\n\nvar Alarm = function Alarm(_ref) {\n  var navigation = _ref.navigation,\n      alarm = _ref.alarm;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useContext = useContext(EditAlarmContext),\n      setEditingAlarmData = _useContext.setEditingAlarmData;\n\n  var getMyObject = function getMyObject() {\n    var jsonValue;\n    return _regeneratorRuntime.async(function getMyObject$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(alarm));\n\n          case 3:\n            jsonValue = _context.sent;\n            jsonValue != null ? JSON.parse(jsonValue) : null;\n            setData(JSON.parse(jsonValue));\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  useEffect(function () {\n    getMyObject();\n  }, []);\n  return React.createElement(TouchableOpacity, {\n    style: styles.border,\n    onPress: function onPress() {\n      setEditingAlarmData(data);\n      navigation.navigate(\"NewAlarm\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, \"fuck\");\n};\n\nvar styles = StyleSheet.create({\n  border: {\n    borderWidth: 1\n  },\n  text: {\n    color: \"red\"\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n    backgroundColor: \"black\"\n  }\n});\nexport default Alarm;","map":{"version":3,"sources":["/Users/hyomithetech/Desktop/crypto_alarm/component/pages/Alarm.js"],"names":["React","useState","useEffect","useContext","AsyncStorage","NavigationContainer","withNavigation","EditAlarmContext","Alarm","navigation","alarm","data","setData","setEditingAlarmData","getMyObject","getItem","jsonValue","JSON","parse","console","log","styles","border","navigate","StyleSheet","create","borderWidth","text","color","button","borderRadius","padding","elevation","backgroundColor"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;;;;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,mBAAT,EAA8BC,cAA9B,QAAoD,0BAApD;AAGA,SAAQC,gBAAR;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAA2B;AAAA,MAAxBC,UAAwB,QAAxBA,UAAwB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AACvC,kBAAwBT,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOU,IAAP;AAAA,MAAaC,OAAb;;AAEA,oBAA8BT,UAAU,CAACI,gBAAD,CAAxC;AAAA,MAAOM,mBAAP,eAAOA,mBAAP;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEQV,YAAY,CAACW,OAAb,CAAqBL,KAArB,CAFR;;AAAA;AAEVM,YAAAA,SAFU;AAGhBA,YAAAA,SAAS,IAAI,IAAb,GAAoBC,IAAI,CAACC,KAAL,CAAWF,SAAX,CAApB,GAA4C,IAA5C;AACAJ,YAAAA,OAAO,CAACK,IAAI,CAACC,KAAL,CAAWF,SAAX,CAAD,CAAP;AAJgB;AAAA;;AAAA;AAAA;AAAA;AAMhBG,YAAAA,OAAO,CAACC,GAAR;;AANgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAWAlB,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEO,MAAM,CAACC,MAAhC;AAAwC,IAAA,OAAO,EAAE,mBAAM;AAACT,MAAAA,mBAAmB,CAACF,IAAD,CAAnB;AAA2BF,MAAAA,UAAU,CAACc,QAAX,CAAoB,UAApB;AAAiC,KAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD,CA7BD;;AA+BA,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,MAAM,EAAE;AACNI,IAAAA,WAAW,EAAE;AADP,GADuB;AAI/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GAJyB;AAO/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,YAAY,EAAE,EADR;AAENC,IAAAA,OAAO,EAAE,EAFH;AAGNC,IAAAA,SAAS,EAAE,CAHL;AAINC,IAAAA,eAAe,EAAE;AAJX;AAPuB,CAAlB,CAAf;AAiBA,eAAezB,KAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { StyleSheet, Text, TouchableOpacity } from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { NavigationContainer, withNavigation } from \"@react-navigation/native\";\n\n\nimport {EditAlarmContext} from '../context/EditAlarmContextProvider'\n\nconst Alarm = ({ navigation, alarm }) => {\n  const [data, setData] = useState({});\n\n  const {setEditingAlarmData} = useContext(EditAlarmContext)\n\n  const getMyObject = async () => {\n    try {\n      const jsonValue = await AsyncStorage.getItem(alarm);\n      jsonValue != null ? JSON.parse(jsonValue) : null;\n      setData(JSON.parse(jsonValue));\n    } catch (e) {\n      console.log(e);\n      // read error\n    }\n  };\n\n  useEffect(() => {\n    getMyObject();\n  }, []);\n\n  return (\n    <TouchableOpacity style={styles.border} onPress={() => {setEditingAlarmData(data); navigation.navigate(\"NewAlarm\") }}>\n      {/* <Text style={styles.text}>Coin Pair: {data.coinPair}</Text>\n      <Text style={styles.text}>Side: {data.moreThan}</Text>\n      <Text style={styles.text}>Price: {data.price}</Text>\n      <Text style={styles.text}>Sound: {data.alarmSound}</Text> */}\n      fuck\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  border: {\n    borderWidth: 1,\n  },\n  text: {\n    color: \"red\",\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n    backgroundColor: \"black\",\n  },\n});\n\n\n\nexport default Alarm;\n"]},"metadata":{},"sourceType":"module"}