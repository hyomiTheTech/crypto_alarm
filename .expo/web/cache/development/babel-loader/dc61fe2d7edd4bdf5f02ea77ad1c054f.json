{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/EuiHyo_Mi/Desktop/crypto_alarm/component/pages/NewAlarm.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport RNPickerSelect from \"react-native-picker-select\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport * as BackgroundFetch from \"expo-background-fetch\";\nimport * as TaskManager from \"expo-task-manager\";\nimport { EditAlarmContext } from \"../context/EditAlarmContextProvider\";\nimport { LivePriceContext } from \"../context/LivePriceContextProvider\";\n\nvar NewAlarm = function NewAlarm(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"BTC-USD\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      coinPair = _useState2[0],\n      setCoinPair = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      condition = _useState4[0],\n      setCondition = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentPrice = _useState6[0],\n      setCurrentPrice = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      price = _useState8[0],\n      setPrice = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      alarmSound = _useState10[0],\n      setAlarmSound = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      editingAlarmPrice = _useState12[0],\n      setEditingAlarmPrice = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      modalVisible = _useState14[0],\n      setModalVisible = _useState14[1];\n\n  var _useContext = useContext(EditAlarmContext),\n      editingAlarmData = _useContext.editingAlarmData;\n\n  var _useContext2 = useContext(EditAlarmContext),\n      editingAlarmIndex = _useContext2.editingAlarmIndex;\n\n  var _useContext3 = useContext(LivePriceContext),\n      setLiveBitcoinPrice = _useContext3.setLiveBitcoinPrice;\n\n  TaskManager.defineTask(\"Bitcoin-price\", function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLiveBitcoinPrice(currentPrice);\n            return _context.abrupt(\"return\", BackgroundFetch.Result.NewData);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  });\n\n  function registerBackgroundFetchAsync() {\n    return _regeneratorRuntime.async(function registerBackgroundFetchAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", BackgroundFetch.registerTaskAsync(\"Bitcoin-price\", {\n              minimumInterval: 1 * 15,\n              stopOnTerminate: false,\n              startOnBoot: true\n            }));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    editingAlarmData === null ? null : setEditingAlarmPrice(editingAlarmData.price);\n    fetch(\"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return setCurrentPrice(data.bitcoin.usd);\n    });\n    var interval = setInterval(function () {\n      fetch(\"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd\").then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        setCurrentPrice(data.bitcoin.usd);\n      });\n    }, 10000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, []);\n\n  var storeData = function storeData() {\n    var value, jsonValue;\n    return _regeneratorRuntime.async(function storeData$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            value = {\n              coinPair: coinPair,\n              condition: condition,\n              price: editingAlarmData === null ? price : editingAlarmPrice,\n              alarmSound: alarmSound\n            };\n            jsonValue = JSON.stringify(value);\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(editingAlarmIndex === null ? \"@\" + Math.random() : editingAlarmIndex, jsonValue).then(function () {\n              return setModalVisible(!modalVisible);\n            }));\n\n          case 5:\n            _context3.next = 10;\n            break;\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](0);\n            error(_context3.t0);\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, React.createElement(Modal, {\n    transparent: true,\n    visible: modalVisible,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: \"black\",\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      margin: 50,\n      padding: 40,\n      backgroundColor: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Alarm Saved!\"), React.createElement(Pressable, {\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n      navigation.navigate(\"ExistingAlarm\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, \"Close Modal\"))))), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, currentPrice && React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 30\n    }\n  }, \"Current Price: $\", currentPrice)), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"Coin Pair\"), editingAlarmData === null ? React.createElement(RNPickerSelect, {\n    useNativeAndroidPickerStyle: false,\n    fixAndroidTouchableBug: true,\n    onValueChange: function onValueChange(value) {\n      return setCoinPair(value);\n    },\n    name: \"coinPair\",\n    items: [{\n      label: \"BTC-USD\",\n      value: \"BTC-USD\"\n    }, {\n      label: \"ETH-USD\",\n      value: \"ETH-USD\"\n    }, {\n      label: \"LTC-USD\",\n      value: \"LTC-USD\"\n    }],\n    placeholder: {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }) : React.createElement(RNPickerSelect, {\n    style: styles.inputAndroid,\n    useNativeAndroidPickerStyle: false,\n    fixAndroidTouchableBug: true,\n    onValueChange: function onValueChange(value) {\n      return setCoinPair(value);\n    },\n    name: \"coinPair\",\n    items: [{\n      label: \"BTC-USD\",\n      value: \"BTC-USD\"\n    }, {\n      label: \"ETH-USD\",\n      value: \"ETH-USD\"\n    }, {\n      label: \"LTC-USD\",\n      value: \"LTC-USD\"\n    }],\n    placeholder: {},\n    value: editingAlarmData.coinPair,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, \"Condition\"), editingAlarmData === null ? React.createElement(RNPickerSelect, {\n    name: \"condition\",\n    style: styles.inputAndroid,\n    useNativeAndroidPickerStyle: false,\n    fixAndroidTouchableBug: true,\n    onValueChange: function onValueChange(value) {\n      return setCondition(value);\n    },\n    items: [{\n      label: \"Less Than\",\n      value: \"Less Than\"\n    }, {\n      label: \"More Than\",\n      value: \"More Than\"\n    }],\n    placeholder: {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }) : React.createElement(RNPickerSelect, {\n    name: \"condition\",\n    style: styles.inputAndroid,\n    useNativeAndroidPickerStyle: false,\n    fixAndroidTouchableBug: true,\n    onValueChange: function onValueChange(value) {\n      return setCondition(value);\n    },\n    items: [{\n      label: \"Less Than\",\n      value: \"Less Than\"\n    }, {\n      label: \"More Than\",\n      value: \"More Than\"\n    }],\n    placeholder: {},\n    value: editingAlarmData.condition,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, \"Price\"), editingAlarmData === null ? React.createElement(TextInput, {\n    onChangeText: setPrice,\n    style: styles.priceInput,\n    placeholder: \"Price\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }) : React.createElement(TextInput, {\n    onChangeText: setEditingAlarmPrice,\n    style: styles.priceInput,\n    placeholder: \"Price\",\n    value: editingAlarmPrice,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, \"Alarm Sound\"), editingAlarmData === null ? React.createElement(RNPickerSelect, {\n    style: styles.inputAndroid,\n    useNativeAndroidPickerStyle: false,\n    fixAndroidTouchableBug: true,\n    onValueChange: function onValueChange(value) {\n      return setAlarmSound(value);\n    },\n    items: [{\n      label: \"Morning Clock\",\n      value: \"Morning Clock\"\n    }, {\n      label: \"Slot Machine\",\n      value: \"Slot Machine\"\n    }, {\n      label: \"Police Siren\",\n      value: \"Police Siren\"\n    }, {\n      label: \"Buglar Alert\",\n      value: \"Buglar Alert\"\n    }],\n    placeholder: {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }) : React.createElement(RNPickerSelect, {\n    style: styles.inputAndroid,\n    useNativeAndroidPickerStyle: false,\n    fixAndroidTouchableBug: true,\n    onValueChange: function onValueChange(value) {\n      return setAlarmSound(value);\n    },\n    items: [{\n      label: \"Morning Clock\",\n      value: \"Morning Clock\"\n    }, {\n      label: \"Slot Machine\",\n      value: \"Slot Machine\"\n    }, {\n      label: \"Police Siren\",\n      value: \"Police Siren\"\n    }, {\n      label: \"Buglar Alert\",\n      value: \"Buglar Alert\"\n    }],\n    placeholder: {},\n    value: editingAlarmData.alarmSound,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    color: \"#41444b\",\n    title: \"Save\",\n    onPress: function onPress() {\n      storeData();\n      registerBackgroundFetchAsync();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  selectSection: {\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  priceInput: {\n    backgroundColor: \"white\",\n    height: 25,\n    margin: 6,\n    borderWidth: 1\n  },\n  modal: {\n    width: \"80%\",\n    height: \"30%\"\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n    backgroundColor: \"black\"\n  },\n  inputAndroid: {\n    fontSize: 16,\n    paddingHorizontal: 10,\n    paddingVertical: 8,\n    borderWidth: 0.5,\n    borderColor: \"purple\",\n    borderRadius: 8,\n    color: \"yellow\",\n    paddingRight: 30\n  }\n});\nexport default NewAlarm;","map":{"version":3,"sources":["/Users/EuiHyo_Mi/Desktop/crypto_alarm/component/pages/NewAlarm.js"],"names":["React","useEffect","useState","useContext","RNPickerSelect","AsyncStorage","BackgroundFetch","TaskManager","EditAlarmContext","LivePriceContext","NewAlarm","navigation","coinPair","setCoinPair","condition","setCondition","currentPrice","setCurrentPrice","price","setPrice","alarmSound","setAlarmSound","editingAlarmPrice","setEditingAlarmPrice","modalVisible","setModalVisible","editingAlarmData","editingAlarmIndex","setLiveBitcoinPrice","defineTask","Result","NewData","registerBackgroundFetchAsync","registerTaskAsync","minimumInterval","stopOnTerminate","startOnBoot","fetch","then","response","json","data","bitcoin","usd","interval","setInterval","clearInterval","storeData","value","jsonValue","JSON","stringify","setItem","Math","random","error","backgroundColor","flex","margin","padding","fontSize","navigate","label","styles","inputAndroid","priceInput","StyleSheet","create","selectSection","flexDirection","justifyContent","alignItems","height","borderWidth","modal","width","button","borderRadius","elevation","paddingHorizontal","paddingVertical","borderColor","color","paddingRight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  Modal,\n  Pressable,\n} from \"react-native\";\nimport RNPickerSelect from \"react-native-picker-select\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nimport * as BackgroundFetch from \"expo-background-fetch\";\nimport * as TaskManager from \"expo-task-manager\";\n\nimport { EditAlarmContext } from \"../context/EditAlarmContextProvider\";\nimport { LivePriceContext } from \"../context/LivePriceContextProvider\";\n\nconst NewAlarm = ({ navigation }) => {\n  const [coinPair, setCoinPair] = useState(\"BTC-USD\");\n  const [condition, setCondition] = useState(null);\n  const [currentPrice, setCurrentPrice] = useState(null);\n  const [price, setPrice] = useState(null);\n  const [alarmSound, setAlarmSound] = useState(null);\n  // editing price\n  const [editingAlarmPrice, setEditingAlarmPrice] = useState(null);\n\n  const [modalVisible, setModalVisible] = useState(false);\n\n  // context\n  const { editingAlarmData } = useContext(EditAlarmContext);\n  const { editingAlarmIndex } = useContext(EditAlarmContext);\n  const { setLiveBitcoinPrice } = useContext(LivePriceContext);\n\n  TaskManager.defineTask(\"Bitcoin-price\", async () => {\n    // Be sure to return the successful result type!\n    setLiveBitcoinPrice(currentPrice);\n\n    return BackgroundFetch.Result.NewData;\n  });\n\n  async function registerBackgroundFetchAsync() {\n    return BackgroundFetch.registerTaskAsync(\"Bitcoin-price\", {\n      minimumInterval: 1 * 15, // 15 minutes\n      stopOnTerminate: false, // android only,\n      startOnBoot: true, // android only\n    });\n  }\n\n  useEffect(() => {\n    editingAlarmData === null\n      ? null\n      : setEditingAlarmPrice(editingAlarmData.price);\n\n    fetch(\n      \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd\"\n    )\n      .then((response) => response.json())\n      .then((data) => setCurrentPrice(data.bitcoin.usd));\n\n    const interval = setInterval(() => {\n      fetch(\n        \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd\"\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          setCurrentPrice(data.bitcoin.usd);\n        });\n    }, 10000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const storeData = async () => {\n    try {\n      const value = {\n        coinPair: coinPair,\n        condition: condition,\n        // toggle between new alarm price and editing alarm price\n        price: editingAlarmData === null ? price : editingAlarmPrice,\n        alarmSound: alarmSound,\n      };\n      const jsonValue = JSON.stringify(value);\n\n      await AsyncStorage.setItem(\n        editingAlarmIndex === null ? `@${Math.random()}` : editingAlarmIndex,\n        jsonValue\n      ).then(() => setModalVisible(!modalVisible));\n    } catch (e) {\n      error(e);\n    }\n  };\n\n  return (\n    <View>\n      <Modal transparent={true} visible={modalVisible}>\n        <View style={{ backgroundColor: \"black\", flex: 1 }}>\n          <View style={{ margin: 50, padding: 40, backgroundColor: \"white\" }}>\n            <Text style={{ fontSize: 20 }}>Alarm Saved!</Text>\n            <Pressable\n              onPress={() => {\n                setModalVisible(!modalVisible);\n                navigation.navigate(\"ExistingAlarm\");\n              }}\n            >\n              <Text>Close Modal</Text>\n            </Pressable>\n          </View>\n        </View>\n      </Modal>\n      <View>{currentPrice && <Text>Current Price: ${currentPrice}</Text>}</View>\n      <View>\n        <Text>Coin Pair</Text>\n        {editingAlarmData === null ? (\n          <RNPickerSelect\n            // style={styles.inputAndroid}\n            useNativeAndroidPickerStyle={false}\n            fixAndroidTouchableBug={true}\n            onValueChange={(value) => setCoinPair(value)}\n            name=\"coinPair\"\n            items={[\n              { label: \"BTC-USD\", value: \"BTC-USD\" },\n              { label: \"ETH-USD\", value: \"ETH-USD\" },\n              { label: \"LTC-USD\", value: \"LTC-USD\" },\n            ]}\n            placeholder={{}}\n          />\n        ) : (\n          <RNPickerSelect\n            style={styles.inputAndroid}\n            useNativeAndroidPickerStyle={false}\n            fixAndroidTouchableBug={true}\n            onValueChange={(value) => setCoinPair(value)}\n            name=\"coinPair\"\n            items={[\n              { label: \"BTC-USD\", value: \"BTC-USD\" },\n              { label: \"ETH-USD\", value: \"ETH-USD\" },\n              { label: \"LTC-USD\", value: \"LTC-USD\" },\n            ]}\n            placeholder={{}}\n            value={editingAlarmData.coinPair}\n          />\n        )}\n      </View>\n      <View>\n        <Text>Condition</Text>\n        {editingAlarmData === null ? (\n          <RNPickerSelect\n            name=\"condition\"\n            style={styles.inputAndroid}\n            useNativeAndroidPickerStyle={false}\n            fixAndroidTouchableBug={true}\n            onValueChange={(value) => setCondition(value)}\n            items={[\n              { label: \"Less Than\", value: \"Less Than\" },\n              { label: \"More Than\", value: \"More Than\" },\n            ]}\n            placeholder={{}}\n          />\n        ) : (\n          <RNPickerSelect\n            name=\"condition\"\n            style={styles.inputAndroid}\n            useNativeAndroidPickerStyle={false}\n            fixAndroidTouchableBug={true}\n            onValueChange={(value) => setCondition(value)}\n            items={[\n              { label: \"Less Than\", value: \"Less Than\" },\n              { label: \"More Than\", value: \"More Than\" },\n            ]}\n            placeholder={{}}\n            value={editingAlarmData.condition}\n          />\n        )}\n      </View>\n      <View>\n        <Text>Price</Text>\n        {editingAlarmData === null ? (\n          <TextInput\n            onChangeText={setPrice}\n            style={styles.priceInput}\n            placeholder={\"Price\"}\n          />\n        ) : (\n          <TextInput\n            onChangeText={setEditingAlarmPrice}\n            style={styles.priceInput}\n            placeholder={\"Price\"}\n            value={editingAlarmPrice}\n          />\n        )}\n      </View>\n      <View>\n        <Text>Alarm Sound</Text>\n        {editingAlarmData === null ? (\n          <RNPickerSelect\n            style={styles.inputAndroid}\n            useNativeAndroidPickerStyle={false}\n            fixAndroidTouchableBug={true}\n            onValueChange={(value) => setAlarmSound(value)}\n            items={[\n              { label: \"Morning Clock\", value: \"Morning Clock\" },\n              { label: \"Slot Machine\", value: \"Slot Machine\" },\n              { label: \"Police Siren\", value: \"Police Siren\" },\n              { label: \"Buglar Alert\", value: \"Buglar Alert\" },\n            ]}\n            placeholder={{}}\n          />\n        ) : (\n          <RNPickerSelect\n            style={styles.inputAndroid}\n            useNativeAndroidPickerStyle={false}\n            fixAndroidTouchableBug={true}\n            onValueChange={(value) => setAlarmSound(value)}\n            items={[\n              { label: \"Morning Clock\", value: \"Morning Clock\" },\n              { label: \"Slot Machine\", value: \"Slot Machine\" },\n              { label: \"Police Siren\", value: \"Police Siren\" },\n              { label: \"Buglar Alert\", value: \"Buglar Alert\" },\n            ]}\n            placeholder={{}}\n            value={editingAlarmData.alarmSound}\n          />\n        )}\n      </View>\n      <View>\n        <Button\n          color=\"#41444b\"\n          title=\"Save\"\n          onPress={() => {\n            storeData();\n            registerBackgroundFetchAsync();\n          }}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  selectSection: {\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  priceInput: {\n    backgroundColor: \"white\",\n    height: 25,\n    margin: 6,\n    borderWidth: 1,\n  },\n  modal: {\n    width: \"80%\",\n    height: \"30%\",\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n    backgroundColor: \"black\",\n  },\n  inputAndroid: {\n    fontSize: 16,\n    paddingHorizontal: 10,\n    paddingVertical: 8,\n    borderWidth: 0.5,\n    borderColor: \"purple\",\n    borderRadius: 8,\n    color: \"yellow\",\n    paddingRight: 30, // to ensure the text is never behind the icon\n  },\n});\n\nexport default NewAlarm;\n"]},"metadata":{},"sourceType":"module"}