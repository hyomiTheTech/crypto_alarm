{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/hyomithetech/Desktop/crypto_alarm/component/Alarm.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar Alarm = function Alarm(_ref) {\n  var key = _ref.key;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  getMyObject = function getMyObject() {\n    var jsonValue;\n    return _regeneratorRuntime.async(function getMyObject$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n          case 3:\n            jsonValue = _context.sent;\n            jsonValue != null ? JSON.parse(jsonValue) : null;\n            setData(jsonValue);\n            _context.next = 10;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 10:\n            console.log('Done.');\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Alarm;","map":{"version":3,"sources":["/Users/hyomithetech/Desktop/crypto_alarm/component/Alarm.js"],"names":["React","useState","useEffect","Alarm","key","data","setData","getMyObject","AsyncStorage","getItem","jsonValue","JSON","parse","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAW;AAAA,MAATC,GAAS,QAATA,GAAS;;AAErB,kBAAwBH,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOI,IAAP;AAAA,MAAaC,OAAb;;AAEAC,EAAAA,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEgBC,YAAY,CAACC,OAAb,CAAqBL,GAArB,CAFhB;;AAAA;AAEFM,YAAAA,SAFE;AAGRA,YAAAA,SAAS,IAAI,IAAb,GAAoBC,IAAI,CAACC,KAAL,CAAWF,SAAX,CAApB,GAA4C,IAA5C;AACAJ,YAAAA,OAAO,CAACI,SAAD,CAAP;AAJQ;AAAA;;AAAA;AAAA;AAAA;;AAAA;AASVG,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AATU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAaA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AASH,CA1BD;;AA4BA,eAAeX,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, StyleSheet, Text, View } from \"react-native\";\n\nconst Alarm = ({key}) => {\n\n    const [data, setData] = useState({})\n\n    getMyObject = async () => {\n        try {\n          const jsonValue = await AsyncStorage.getItem(key)\n          jsonValue != null ? JSON.parse(jsonValue) : null\n          setData(jsonValue)\n        } catch(e) {\n          // read error\n        }\n      \n        console.log('Done.')\n      \n      }\n\n    return (\n        <View>\n            <Text></Text>\n            <Text></Text>\n            <Text></Text>\n            <Text></Text>\n            <Text></Text>\n        </View>\n    )\n}\n\nexport default Alarm"]},"metadata":{},"sourceType":"module"}