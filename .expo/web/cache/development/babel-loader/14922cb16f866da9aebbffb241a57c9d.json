{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/hyomithetech/Desktop/crypto_alarm/component/pages/ExistingAlarm.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Alarm from \"./Alarm\";\n\nvar ExistingAlarm = function ExistingAlarm(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      update = _useState4[0],\n      setUpdate = _useState4[1];\n\n  var getData = function getData() {\n    var keys;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            keys = [];\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.getAllKeys());\n\n          case 4:\n            keys = _context.sent;\n            setData(keys);\n            _context.next = 10;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 8]], Promise);\n  };\n\n  useEffect(function () {\n    getData();\n    return getData;\n  }, []);\n  console.log(\"why\");\n\n  var removeValue = function removeValue(key) {\n    return _regeneratorRuntime.async(function removeValue$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.removeItem(key));\n\n          case 3:\n            _context2.next = 8;\n            break;\n\n          case 5:\n            _context2.prev = 5;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 8:\n            console.log('Done.');\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, data && React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, data.map(function (alarm, index) {\n    return React.createElement(Alarm, {\n      key: index,\n      alarm: alarm,\n      navigation: navigation,\n      removeValue: removeValue,\n      datas: data,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    });\n  })));\n};\n\nexport default ExistingAlarm;","map":{"version":3,"sources":["/Users/hyomithetech/Desktop/crypto_alarm/component/pages/ExistingAlarm.js"],"names":["React","useState","useEffect","AsyncStorage","Alarm","ExistingAlarm","navigation","data","setData","update","setUpdate","getData","keys","getAllKeys","console","log","removeValue","key","removeItem","map","alarm","index"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,OAAOC,KAAP;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AACtC,kBAAwBL,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOM,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA4BP,QAAQ,CAAC,IAAD,CAApC;AAAA;AAAA,MAAOQ,MAAP;AAAA,MAAeC,SAAf;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,YAAAA,IADU,GACH,EADG;AAAA;AAAA;AAAA,6CAGCT,YAAY,CAACU,UAAb,EAHD;;AAAA;AAGZD,YAAAA,IAHY;AAIZJ,YAAAA,OAAO,CAACI,IAAD,CAAP;AAJY;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAOAV,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,OAAO;AAEP,WAAOA,OAAP;AACD,GAJQ,EAIN,EAJM,CAAT;AAMAG,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEVd,YAAY,CAACe,UAAb,CAAwBD,GAAxB,CAFU;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKhBH,YAAAA,OAAO,CAACC,GAAR;;AALgB;AAQlBD,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AARkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAWA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,IAAI,IACH,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACY,GAAL,CAAS,UAACC,KAAD,EAAQC,KAAR;AAAA,WACR,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,KAAZ;AAAmB,MAAA,KAAK,EAAED,KAA1B;AAAiC,MAAA,UAAU,EAAEd,UAA7C;AAAyD,MAAA,WAAW,EAAEU,WAAtE;AAAmF,MAAA,KAAK,EAAET,IAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADQ;AAAA,GAAT,CADH,CAFJ,CADF;AAWD,CAzCD;;AA2CA,eAAeF,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, StyleSheet, Text, View } from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nimport Alarm from \"./Alarm\";\n\nconst ExistingAlarm = ({navigation}) => {\n  const [data, setData] = useState(null)\n  const [update, setUpdate] = useState(true)\n\n  const getData = async () => {\n    let keys = [];\n    try {\n      keys = await AsyncStorage.getAllKeys();\n      setData(keys);\n    } catch (e) {}\n  };\n  useEffect(() => {\n    getData();\n\n    return getData\n  }, []);\n\n  console.log(\"why\")\n\n  const removeValue = async (key) => {\n    try {\n      await AsyncStorage.removeItem(key)\n    } catch(e) {\n      // remove error\n      console.log(e)\n    }\n  \n    console.log('Done.')\n  }\n\n  return (\n    <View>\n      {data && (\n        <View>\n          {data.map((alarm, index) => (\n            <Alarm key={index} alarm={alarm} navigation={navigation} removeValue={removeValue} datas={data}/>\n          ))}\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default ExistingAlarm;\n"]},"metadata":{},"sourceType":"module"}