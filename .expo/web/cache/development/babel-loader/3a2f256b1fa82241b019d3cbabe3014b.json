{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/hyomithetech/Desktop/crypto_alarm/component/Alarm.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nvar Alarm = function Alarm(_ref) {\n  var alarm = _ref.alarm;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var getMyObject = function getMyObject() {\n    var jsonValue;\n    return _regeneratorRuntime.async(function getMyObject$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(alarm));\n\n          case 3:\n            jsonValue = _context.sent;\n            jsonValue != null ? JSON.parse(jsonValue) : null;\n            setData(JSON.parse(jsonValue));\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  useEffect(function () {\n    getMyObject();\n  }, []);\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \"Coin Pair: \", data.coinPair), React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"Side: \", data.moreThan), React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"Price: \", data.price), React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Sound: \", data.alarmSound), React.createElement(Button, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  text: {\n    color: \"red\"\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n    backgroundColor: \"black\"\n  }\n});\nexport default Alarm;","map":{"version":3,"sources":["/Users/hyomithetech/Desktop/crypto_alarm/component/Alarm.js"],"names":["React","useState","useEffect","AsyncStorage","Alarm","alarm","data","setData","getMyObject","getItem","jsonValue","JSON","parse","console","log","styles","text","coinPair","moreThan","price","alarmSound","button","StyleSheet","create","color","borderRadius","padding","elevation","backgroundColor"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAa;AAAA,MAAXC,KAAW,QAAXA,KAAW;;AAEvB,kBAAwBJ,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOK,IAAP;AAAA,MAAaC,OAAb;;AAED,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEWL,YAAY,CAACM,OAAb,CAAqBJ,KAArB,CAFX;;AAAA;AAEPK,YAAAA,SAFO;AAGbA,YAAAA,SAAS,IAAI,IAAb,GAAoBC,IAAI,CAACC,KAAL,CAAWF,SAAX,CAApB,GAA4C,IAA5C;AACAH,YAAAA,OAAO,CAACI,IAAI,CAACC,KAAL,CAAWF,SAAX,CAAD,CAAP;AAJa;AAAA;;AAAA;AAAA;AAAA;AAMXG,YAAAA,OAAO,CAACC,GAAR;;AANW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAYGZ,EAAAA,SAAS,CAAC,YAAM;AACZM,IAAAA,WAAW;AACd,GAFQ,EAEP,EAFO,CAAT;AAIF,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAuCV,IAAI,CAACW,QAA5C,CADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAkCV,IAAI,CAACY,QAAvC,CAFJ,EAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAmCV,IAAI,CAACa,KAAxC,CAHJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAmCV,IAAI,CAACc,UAAxC,CAJJ,EAKI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEL,MAAM,CAACM,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AASH,CA7BD;;AA+BA,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,IAAI,EAAE;AACFQ,IAAAA,KAAK,EAAE;AADL,GADuB;AAI7BH,EAAAA,MAAM,EAAE;AACJI,IAAAA,YAAY,EAAE,EADV;AAEJC,IAAAA,OAAO,EAAE,EAFL;AAGJC,IAAAA,SAAS,EAAE,CAHP;AAIJC,IAAAA,eAAe,EAAE;AAJb;AAJqB,CAAlB,CAAf;AAYA,eAAexB,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, StyleSheet, Text, View } from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\n\nconst Alarm = ({alarm}) => {\n\n    const [data, setData] = useState({})\n\n   const getMyObject = async () => {\n        try {\n          const jsonValue = await AsyncStorage.getItem(alarm)\n          jsonValue != null ? JSON.parse(jsonValue) : null\n          setData(JSON.parse(jsonValue))\n        } catch(e) {\n            console.log(e)\n          // read error\n        }\n      \n      }\n\n      useEffect(() => {\n          getMyObject()\n      },[])\n\n    return (\n        <View>\n            <Text style={styles.text} >Coin Pair: {data.coinPair}</Text>\n            <Text style={styles.text} >Side: {data.moreThan}</Text>\n            <Text style={styles.text} >Price: {data.price}</Text>\n            <Text style={styles.text} >Sound: {data.alarmSound}</Text>\n            <Button style={styles.button}/>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    text: {\n        color: \"red\"\n    },\n    button: {\n        borderRadius: 20,\n        padding: 10,\n        elevation: 2,\n        backgroundColor: \"black\"\n      }\n})\n\nexport default Alarm"]},"metadata":{},"sourceType":"module"}