{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/EuiHyo_Mi/Desktop/crypto_alarm/component/pages/ExistingAlarm.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Alarm from \"./Alarm\";\nimport { LivePriceContext } from \"../context/LivePriceContextProvider\";\n\nvar ExistingAlarm = function ExistingAlarm(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      update = _useState4[0],\n      setUpdate = _useState4[1];\n\n  var _useContext = useContext(LivePriceContext),\n      liveBitcoinPrice = _useContext.liveBitcoinPrice;\n\n  var getData = function getData() {\n    var keys;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            keys = [];\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.getAllKeys());\n\n          case 4:\n            keys = _context.sent;\n            setData(keys);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 8]], Promise);\n  };\n\n  useEffect(function () {\n    getData();\n    return getData;\n  }, [update]);\n\n  var removeValue = function removeValue(key) {\n    return _regeneratorRuntime.async(function removeValue$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.removeItem(key));\n\n          case 3:\n            _context2.next = 8;\n            break;\n\n          case 5:\n            _context2.prev = 5;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Live Price: \", liveBitcoinPrice), data && React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, data.map(function (alarmIndex) {\n    return React.createElement(Alarm, {\n      key: alarmIndex,\n      alarmIndex: alarmIndex,\n      navigation: navigation,\n      removeValue: removeValue,\n      update: update,\n      setUpdate: setUpdate,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    });\n  })));\n};\n\nexport default ExistingAlarm;","map":{"version":3,"sources":["/Users/EuiHyo_Mi/Desktop/crypto_alarm/component/pages/ExistingAlarm.js"],"names":["React","useState","useEffect","useContext","AsyncStorage","Alarm","LivePriceContext","ExistingAlarm","navigation","data","setData","update","setUpdate","liveBitcoinPrice","getData","keys","getAllKeys","console","log","removeValue","key","removeItem","map","alarmIndex"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;;;;;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,OAAOC,KAAP;AAEA,SAASC,gBAAT;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACxC,kBAAwBP,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOQ,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA4BT,QAAQ,CAAC,IAAD,CAApC;AAAA;AAAA,MAAOU,MAAP;AAAA,MAAeC,SAAf;;AAEA,oBAA6BT,UAAU,CAACG,gBAAD,CAAvC;AAAA,MAAQO,gBAAR,eAAQA,gBAAR;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,YAAAA,IADU,GACH,EADG;AAAA;AAAA;AAAA,6CAGCX,YAAY,CAACY,UAAb,EAHD;;AAAA;AAGZD,YAAAA,IAHY;AAIZL,YAAAA,OAAO,CAACK,IAAD,CAAP;AAJY;AAAA;;AAAA;AAAA;AAAA;AAMZE,YAAAA,OAAO,CAACC,GAAR;;AANY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AASAhB,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,OAAO;AAEP,WAAOA,OAAP;AACD,GAJQ,EAIN,CAACH,MAAD,CAJM,CAAT;;AAMA,MAAMQ,WAAW,GAAG,SAAdA,WAAc,CAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEVhB,YAAY,CAACiB,UAAb,CAAwBD,GAAxB,CAFU;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKhBH,YAAAA,OAAO,CAACC,GAAR;;AALgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AASA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAmBL,gBAAnB,CADF,EAEGJ,IAAI,IACH,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACa,GAAL,CAAS,UAACC,UAAD;AAAA,WACR,oBAAC,KAAD;AACE,MAAA,GAAG,EAAEA,UADP;AAEE,MAAA,UAAU,EAAEA,UAFd;AAGE,MAAA,UAAU,EAAEf,UAHd;AAIE,MAAA,WAAW,EAAEW,WAJf;AAKE,MAAA,MAAM,EAAER,MALV;AAME,MAAA,SAAS,EAAEC,SANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADQ;AAAA,GAAT,CADH,CAHJ,CADF;AAmBD,CAjDD;;AAmDA,eAAeL,aAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { Button, StyleSheet, Text, View } from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nimport Alarm from \"./Alarm\";\n\nimport { LivePriceContext } from \"../context/LivePriceContextProvider\";\n\nconst ExistingAlarm = ({ navigation }) => {\n  const [data, setData] = useState(null);\n  const [update, setUpdate] = useState(true);\n\n  const { liveBitcoinPrice } = useContext(LivePriceContext);\n\n  const getData = async () => {\n    let keys = [];\n    try {\n      keys = await AsyncStorage.getAllKeys();\n      setData(keys);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  useEffect(() => {\n    getData();\n\n    return getData;\n  }, [update]);\n\n  const removeValue = async (key) => {\n    try {\n      await AsyncStorage.removeItem(key);\n    } catch (e) {\n      // remove error\n      console.log(e);\n    }\n  };\n\n  return (\n    <View>\n      <Text>Live Price: {liveBitcoinPrice}</Text>\n      {data && (\n        <View>\n          {data.map((alarmIndex) => (\n            <Alarm\n              key={alarmIndex}\n              alarmIndex={alarmIndex}\n              navigation={navigation}\n              removeValue={removeValue}\n              update={update}\n              setUpdate={setUpdate}\n            />\n          ))}\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default ExistingAlarm;\n"]},"metadata":{},"sourceType":"module"}