{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/hyomithetech/Desktop/crypto_alarm/component/ExistingAlarm.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nvar ExistingAlarm = function ExistingAlarm() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  useEffect(function () {\n    var getData = function getData() {\n      var jsonValue, parsedValue;\n      return _regeneratorRuntime.async(function getData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@1\"));\n\n            case 3:\n              jsonValue = _context.sent;\n              parsedValue = JSON.parse(jsonValue);\n              console.log(parsedValue);\n              setData(parsedValue);\n              _context.next = 11;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]], Promise);\n    };\n\n    getData();\n  }, []);\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Existing Alarm\"), data && React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }\n  }, data.coinPair));\n};\n\nexport default ExistingAlarm;","map":{"version":3,"sources":["/Users/hyomithetech/Desktop/crypto_alarm/component/ExistingAlarm.js"],"names":["React","useState","useEffect","AsyncStorage","ExistingAlarm","data","setData","getData","getItem","jsonValue","parsedValue","JSON","parse","console","log","coinPair"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,kBAAwBH,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOI,IAAP;AAAA,MAAaC,OAAb;;AAEAJ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMK,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEUJ,YAAY,CAACK,OAAb,CAAqB,IAArB,CAFV;;AAAA;AAERC,cAAAA,SAFQ;AAGRC,cAAAA,WAHQ,GAGMC,IAAI,CAACC,KAAL,CAAWH,SAAX,CAHN;AAIZI,cAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACAJ,cAAAA,OAAO,CAACI,WAAD,CAAP;AALY;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AAWAH,IAAAA,OAAO;AACR,GAbQ,EAaP,EAbO,CAAT;AAeA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEGF,IAAI,IAAI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,IAAI,CAACU,QAAZ,CAFX,CADF;AAMD,CAxBD;;AA0BA,eAAeX,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, StyleSheet, Text, View } from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst ExistingAlarm = () => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        let jsonValue = await AsyncStorage.getItem(\"@1\");\n        let parsedValue = JSON.parse(jsonValue)\n        console.log(parsedValue);\n        setData(parsedValue);\n      } catch (e) {\n        // read error\n      }\n    };\n\n    getData();\n  },[]);\n\n  return (\n    <View>\n      <Text>Existing Alarm</Text>\n      {data && <Text>{data.coinPair}</Text>}\n    </View>\n  );\n};\n\nexport default ExistingAlarm;\n"]},"metadata":{},"sourceType":"module"}