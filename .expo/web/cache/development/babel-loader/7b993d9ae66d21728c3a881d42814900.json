{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { BackgroundFetchStatus } from \"./BackgroundFetch.types\";\nexport default {\n  get name() {\n    return 'ExpoBackgroundFetch';\n  },\n\n  getStatusAsync: function getStatusAsync() {\n    return _regeneratorRuntime.async(function getStatusAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", BackgroundFetchStatus.Restricted);\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n};","map":{"version":3,"sources":["../src/ExpoBackgroundFetch.web.ts"],"names":[],"mappings":";AAAA,SAAS,qBAAT;AAEA,eAAe;AACb,MAAI,IAAJ,GAAQ;AACN,WAAO,qBAAP;AACD,GAHY;;AAIP,EAAA,cAJO;AAAA;AAAA;AAAA;AAAA;AAAA,6CAKJ,qBAAqB,CAAC,UALlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf","sourcesContent":["import { BackgroundFetchStatus } from './BackgroundFetch.types';\n\nexport default {\n  get name(): string {\n    return 'ExpoBackgroundFetch';\n  },\n  async getStatusAsync(): Promise<BackgroundFetchStatus | null> {\n    return BackgroundFetchStatus.Restricted;\n  },\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}