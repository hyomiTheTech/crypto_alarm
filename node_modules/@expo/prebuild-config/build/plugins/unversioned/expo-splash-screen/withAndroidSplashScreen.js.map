{"version":3,"file":"withAndroidSplashScreen.js","sourceRoot":"","sources":["../../../../src/plugins/unversioned/expo-splash-screen/withAndroidSplashScreen.ts"],"names":[],"mappings":"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","sourcesContent":["import { ConfigPlugin, WarningAggregator, withDangerousMod } from '@expo/config-plugins';\nimport { ExpoConfig } from '@expo/config-types';\nimport {\n  AndroidSplashScreenConfig,\n  configureAndroidSplashScreen,\n  SplashScreenImageResizeMode,\n} from '@expo/configure-splash-screen';\n\nexport const withAndroidSplashScreen: ConfigPlugin = config => {\n  // Update the android status bar to match the splash screen\n  // androidStatusBar applies info to the app activity style.\n  const backgroundColor = getSplashBackgroundColor(config);\n  if (config.androidStatusBar?.backgroundColor) {\n    if (backgroundColor.toLowerCase() !== config.androidStatusBar?.backgroundColor.toLowerCase()) {\n      WarningAggregator.addWarningAndroid(\n        'androidStatusBar.backgroundColor',\n        'The androidStatusBar.backgroundColor color conflicts with the splash backgroundColor on Android'\n      );\n    }\n  } else {\n    if (!config.androidStatusBar) config.androidStatusBar = {};\n    config.androidStatusBar.backgroundColor = backgroundColor;\n  }\n  return withDangerousMod(config, [\n    'android',\n    async config => {\n      await setSplashScreenAsync(config, config.modRequest.projectRoot);\n      return config;\n    },\n  ]);\n};\n\nfunction getSplashBackgroundColor(config: ExpoConfig) {\n  const backgroundColor =\n    config.android?.splash?.backgroundColor ?? config.splash?.backgroundColor ?? '#FFFFFF'; // white\n  return backgroundColor;\n}\n\nexport function getSplashScreenConfig(config: ExpoConfig): AndroidSplashScreenConfig | undefined {\n  if (!config.splash && !config.android?.splash) {\n    return;\n  }\n\n  const backgroundColor = getSplashBackgroundColor(config);\n\n  const result: AndroidSplashScreenConfig = {\n    imageResizeMode:\n      config.android?.splash?.resizeMode ??\n      config.splash?.resizeMode ??\n      SplashScreenImageResizeMode.CONTAIN,\n    backgroundColor,\n    image:\n      config.android?.splash?.xxxhdpi ??\n      config.android?.splash?.xxhdpi ??\n      config.android?.splash?.xhdpi ??\n      config.android?.splash?.hdpi ??\n      config.android?.splash?.mdpi ??\n      config.splash?.image,\n    statusBar: {\n      backgroundColor,\n      // Use the settings from androidStatusBar to keep the transition as smooth as possible.\n      hidden: config.androidStatusBar?.hidden,\n      translucent: config.androidStatusBar?.translucent,\n      style: config.androidStatusBar?.barStyle,\n    },\n  };\n\n  return result;\n}\n\nexport async function setSplashScreenAsync(config: ExpoConfig, projectRoot: string) {\n  const majorVersionString =\n    config.sdkVersion === 'UNVERSIONED' ? null : config.sdkVersion?.split('.').shift();\n  const splashScreenIsSupported =\n    (majorVersionString && Number(majorVersionString) >= 39) ||\n    /** UNVERSIONED CASE */ !majorVersionString;\n\n  if (!splashScreenIsSupported) {\n    WarningAggregator.addWarningAndroid(\n      'splash',\n      `Unable to automatically configure splash screen. Automatic splash screen configuration is available since SDK 39. Please upgrade to the newer SDK version. Please refer to the expo-splash-screen README for more information: https://github.com/expo/expo/tree/master/packages/expo-splash-screen`\n    );\n\n    return;\n  }\n\n  const splashConfig = getSplashScreenConfig(config);\n  if (!splashConfig) {\n    return;\n  }\n\n  try {\n    await configureAndroidSplashScreen(projectRoot, splashConfig);\n  } catch (e) {\n    WarningAggregator.addWarningAndroid('splash', e);\n  }\n}\n"]}